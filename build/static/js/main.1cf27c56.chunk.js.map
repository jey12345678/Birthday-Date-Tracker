{"version":3,"sources":["Components/Button.js","Components/Header.js","Components/Task.js","Components/Tasks.js","Components/AddTask.js","Components/Footer.js","Components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","textField","cursor","day","Tasks","tasks","map","AddTask","useState","setTextField","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddedTask","setShowAddedTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","console","log","filter","toggleReminder","taskToggled","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cf27c56.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color,text,onClick}) =>{\r\n\r\n    return (<button onClick = {onClick} style = {{backgroundColor: color}} className = 'btn'>{text}</button>)\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'darkBlue',\r\n}\r\nButton.propTypes = {\r\n    text : PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button;\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\n\r\n\r\nconst Header = ({title,onAdd,showAdd}) => {\r\n\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <header className = 'headerField'>\r\n\r\n            <h1>{title}</h1>\r\n            {location.pathname === '/' &&\r\n            <Button color = {showAdd ? 'steelblue' : 'darkblue'} text = {showAdd ? 'Close' : 'Add'} onClick = {onAdd} />}\r\n           \r\n            \r\n        </header>\r\n    )\r\n}\r\n\r\n//Sets default value for header.\r\n\r\n\r\nHeader.defaultProps = {\r\n    title: 'Birthday Task Tracker'\r\n}\r\n\r\n\r\nHeader.propTypes = {\r\n    title : PropTypes.string.isRequired\r\n\r\n}\r\n\r\n//CSS in JS\r\n/*\r\nconst headingStyle = {\r\n    color: 'blue',backgroundColor: 'black'\r\n}\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Header\r\n","import {FaTimes} from 'react-icons/fa'\r\n\r\nconst Task = ({task,onDelete,onToggle}) => {\r\n    return (\r\n        <div className = {`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick = {() => onToggle(task.id)}>\r\n            <h3>\r\n                {task.textField} {' '} <FaTimes style = {{color: 'darkblue', cursor: 'pointer'}} onClick = { () =>onDelete(task.id)} />\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from \"./Task.js\"\r\n\r\n//state is immutable, you cannot change it.\r\nconst Tasks = ({tasks,onDelete, onToggle}) => {\r\n\r\n\r\n    return (\r\n        <>\r\n        {tasks.map((task) =>(<Task key = {task} task = {task} onDelete = {onDelete} onToggle = {onToggle} />))}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import {useState} from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n\r\n    const [textField,setTextField] = useState('')\r\n    const [day,setDay] = useState('')\r\n    const [reminder,setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!textField){\r\n            alert('Please add a task!')\r\n            return\r\n        }\r\n        onAdd({textField,day,reminder})\r\n\r\n        setTextField('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className = 'add-form' onSubmit = {onSubmit} >\r\n            <div className = 'form-control'>\r\n                <label>Birthday</label>\r\n                <input type = 'text' placeholder = 'Add Task' value = {textField} onChange = {(e) => setTextField(e.target.value)}/>\r\n            \r\n            </div>\r\n            <div className = 'form-control'>\r\n                <label>Date</label>\r\n                <input type = 'text' placeholder = 'Add Day and Time' value = {day} onChange = {(e) => setDay(e.target.value)}/>\r\n            \r\n            </div>\r\n            <div className = 'form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type = 'checkbox' checked = {reminder} value = {reminder} onChange = {(e) => setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n\r\n            <input type = 'submit' value = 'Save Task' className = 'btn btn-block'/>\r\n        </form>\r\n\r\n    \r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import {Link} from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n\r\n            <p>Copyright &copy; 2021</p>\r\n            <Link to = \"/about\">About</Link>\r\n            \r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import {Link} from 'react-router-dom'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n\r\n            <h4>Version 1.0.0</h4>\r\n\r\n            <p className = 'about-paragraph'>Welcome to my Birthday Tracker Website! Here I store the birthdays of all my family members so that I could keep track of them!</p>\r\n            <Link to = '/'>Go Back</Link>          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import Header from './Components/Header'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Tasks from './Components/Tasks'\nimport {useState,useEffect} from 'react'\nimport AddedTask from './Components/AddTask'\nimport Footer from'./Components/Footer'\nimport About from './Components/About'\nfunction App() {\n  //const name = \"Jeyason\"\n  //const x = false\n  //If x is true then print Yes, else print no.\n  //<h2>Hello {x ? 'Yes' : 'No'}</h2>\n\n  //Or we could do variable so...\n  //<h2>Hello {name}</h2>\n\n  //Or we could do just regular arthimetic operations\n\n  const [showAddedTask,setShowAddedTask] = useState(false)\n\n  const [tasks,setTasks] = useState([])\n\n  useEffect(() => {\n\n    const getTasks = async() =>{\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n   \n    getTasks()\n  },[])\n\n  //Fetch the tasks\n\n  const fetchTasks = async() =>{\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n    \n    return data\n  }\n\n\n  //FetchTask\n\n  const fetchTask = async(id) =>{\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n    return data\n  }\n\n  //Add Task\n\n  const addTask = async (task) =>{\n    const res = await fetch('http://localhost:5000/tasks',{\n      method: 'POST',\n      headers: {\n        'Content-type' : 'application/json'\n      },\n      body: JSON.stringify(task),\n\n    })\n    const data = await res.json()\n\n    setTasks([...tasks,data])\n\n  }\n\n\n\n  //Delete Task\n  const deleteTask = async (id) =>{\n\n    console.log(\"HELLO\");\n\n    console.log(id);\n\n    await fetch(`http://localhost:5000/tasks/${id}`,{ method: 'DELETE'})\n    \n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  //Toggle the reminder.\n  const toggleReminder = async(id) =>{\n    const taskToggled = await fetchTask(id)\n    const updTask = { ...taskToggled,reminder: !taskToggled.reminder}\n    \n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n\n      method: 'PUT',\n      headers: {\n        'Content-type' : 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    })\n\n    const data = await res.json()\n\n    setTasks(tasks.map((task) => task.id === id ? { ...task,reminder: data.reminder} : task))\n  }\n\n  return (\n    <Router>\n      <div className = 'appContainer' >\n        <Header onAdd = {() => setShowAddedTask(!showAddedTask)} showAdd = {showAddedTask}/>\n        \n        <Route path = '/' exact render = {(props) => (\n          <>\n\n            {showAddedTask && <AddedTask onAdd = {addTask}  />}\n\n            {tasks.length > 0 ?<Tasks tasks = {tasks} onDelete={deleteTask} onToggle = {toggleReminder} /> : 'There are no tasks avaliable!'}\n\n\n          </>\n\n        )} />\n\n        <Route path = '/about' component = {About} />\n\n        <Footer />\n\n      </div>\n    </Router>\n\n    \n  );\n}\n\n\n/*\n\nclass App extends React.Component{\n  render(){\n    return <h1>Hello from a class</h1>\n  }\n}\n*/\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}